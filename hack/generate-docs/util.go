// SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and Open Component Model contributors.
//
// SPDX-License-Identifier: Apache-2.0

package main

import (
	"strings"

	"github.com/spf13/cobra"
)

// Test to see if we have a reason to print See Also information in docs
// Basically this is a test for a parent command or a subcommand which is
// both not deprecated and not the autogenerated help command.
func hasSeeAlso(cmd *cobra.Command) bool {
	if cmd.HasParent() {
		return true
	}
	return cmd.HasAvailableSubCommands()
}

func hasAdditionalHelpTopics(cmd *cobra.Command) bool {
	for _, c := range cmd.Commands() {
		if !c.IsAvailableCommand() || !c.IsAdditionalHelpTopicCommand() {
			continue
		}
		return true
	}
	return false
}

// Temporary workaround for yaml lib generating incorrect yaml with long strings
// that do not contain \n.
func forceMultiLine(s string) string {
	if len(s) > 60 && !strings.Contains(s, "\n") {
		s = s + "\n"
	}
	return s
}

type byName []*cobra.Command

func (s byName) Len() int           { return len(s) }
func (s byName) Swap(i, j int)      { s[i], s[j] = s[j], s[i] }
func (s byName) Less(i, j int) bool { return s[i].Name() < s[j].Name() }

func SanitizePre(in string) string {
	str := ""
	for {
		i := strings.Index(in, "<pre>")
		if i < 0 {
			break
		}

		after := ""
		e := strings.Index(in, "</pre>")
		if e < 0 {
			e = len(in)
		} else {
			after = in[e+6:]
		}

		msg := in[i+5 : e]
		msg = strings.ReplaceAll(msg, "-", "&dash;")

		str += in[:i] + "\n<pre>" + msg + "</pre>\n"
		in = after
	}
	return str + in
}
