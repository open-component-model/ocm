before:
  hooks:
    - go mod tidy
builds:
  - <<: &build_defaults
      binary: ocm
      main: ./cmds/ocm/main.go
      ldflags:
        - -s -w -X github.com/open-component-model/ocm/pkg/version.gitVersion={{.Version}} -X github.com/open-component-model/ocm/pkg/version.gitCommit={{.Commit}} -X github.com/open-component-model/ocm/pkg/version.buildDate={{.CommitDate}}
      env:
        - CGO_ENABLED=0
    id: linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - 7
  - <<: *build_defaults
    id: darwin
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
  - <<: *build_defaults
    id: windows
    goos:
      - windows
archives:
  - name_template: "{{ .Binary }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    id: nix
    builds: [linux, darwin]
    format: tar.gz
    files:
      - none*
  - name_template: "{{ .Binary }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    id: windows
    builds: [windows]
    format: zip
    files:
      - none*
source:
  enabled: true
  name_template: '{{ .ProjectName }}-{{ .Version }}-source_code'
sboms:
  - id: source
    artifacts: source
    documents:
      - "{{ .ProjectName }}-{{ .Version }}-sbom.spdx.json"
signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
    artifacts: checksum
    output: true
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
#brews:
#  - name: ocm
#    tap:
#      owner: open-component-model
#      name: homebrew-tap
#      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
#    folder: Formula
#    homepage: "https://ocm.software/"
#    description: "The OCM CLI makes it easy to create component versions and embed them in build processes."
#    test: |
#      system "#{bin}/ocm --version"
