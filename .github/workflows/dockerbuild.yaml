name: OCM Build Test
# trigger manually
run-name: Build the OCM CLI
on:
  workflow_dispatch:
env:
  VERSION: "v0.2.0"
  OCI_URL: ghcr.io/jensh007
jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        timeout-minutes: 10
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build amd64
        id: build_amd64
        uses: docker/build-push-action@v3
        with:
          push: true
          load: false
          platforms: linux/amd64
          tags: ${{ env.OCI_URL }}/ocm-cli:${{ env.VERSION }}-linux-amd64
          build-args: |
            OCM_VERSION=${{ env.VERSION }}
            OCM_PLATFORM=Linux_x86_64
      - name: Build arm64
        id: build_arm64
        uses: docker/build-push-action@v3
        with:
          push: true
          load: false
          platforms: linux/arm64
          tags: ${{ env.OCI_URL }}/ocm-cli:${{ env.VERSION }}-linux-arm64
          build-args: |
            OCM_VERSION=${{ env.VERSION }}
            OCM_PLATFORM=Linux_arm64
      - name: Create multi-platform image
        run: |
          docker buildx imagetools create ${{ env.OCI_URL }}/ocm-cli:${{ env.VERSION }}-linux-amd64 ${{ env.OCI_URL }}/ocm-cli:${{ env.VERSION }}-linux-arm64 -t ${{ env.OCI_URL }}/ocm-cli:${{ env.VERSION }}
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.OCI_URL }}/ocm-cli:${{ env.VERSION }}

