name: Blackduck Scan PR
on:
  pull_request:
    branches: [main]
  push:
    branches: [main] 
  workflow_dispatch:

permissions:
  checks: write
  pull-requests: write

## directly invoke command line 
# jobs:
#   blackduck:
#     runs-on: [ubuntu-latest]
#     steps: 
#       - name: Blackduck PR scan on commandline
#         if: ${{ github.event_name == 'pull_request' }}
#         env:
#           NODE_TLS_REJECT_UNAUTHORIZED: true
#           DETECT_PROJECT_USER_GROUPS: opencomponentmodel
#           DETECT_PROJECT_VERSION_DISTRIBUTION: SAAS
#           DETECT_SOURCE_PATH: ./
#           DETECT_BLACKDUCK_SCAN_MODE: RAPID
#           SYNOPSYS_SKIP_PHONE_HOME: true
#           BLACKDUCK_SKIP_PHONE_HOME: true
#         run: |
#           bash ./detect8.sh  \
#           --logging.level.com.synopsys.integration=DEBUG  \
#           --blackduck.url=${{ secrets.BLACKDUCK_URL }} \
#           --blackduck.api.token=${{ secrets.BLACKDUCK_API_TOKEN }}  \
#           --detect.project.version.distribution=$DETECT_PROJECT_VERSION_DISTRIBUTION \
#           --detect.blackduck.signature.scanner.memory=4096  \
#           --detect.timeout=6000 \
#           --blackduck.trust.cert=true \
#           --detect.project.user.groups=$DETECT_PROJECT_USER_GROUPS  \
#           --detect.blackduck.scan.mode=$SDETECT_BLACKDUCK_SCAN_MODE
#           #--detect.project.name=$ProjectName \
#           #--detect.project.version.name=$ProjectVersion \
#           #--detect.code.location.name=$ProjectName/$ProjectVersion \
#           --detect.source.path=$DETECT_SOURCE_PATH


#invoke forked detect-action as the one from synopsys is deprecated: https://github.com/mercedesbenzio/detect-action
jobs:
  blackduck:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Blackduck Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: mercedesbenzio/detect-action@v1
        env:
          DETECT_PROJECT_USER_GROUPS: opencomponentmodel
          DETECT_PROJECT_VERSION_DISTRIBUTION: SAAS
          DETECT_SOURCE_PATH: ./
          NODE_TLS_REJECT_UNAUTHORIZED: true
        with:
          scan-mode: INTELLIGENT
          github-token: ${{ secrets.GITHUB_TOKEN }}
          blackduck-url: ${{ secrets.BLACKDUCK_URL }}
          blackduck-api-token: ${{ secrets.BLACKDUCK_API_TOKEN }}

      - name: Blackduck PR Scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: mercedesbenzio/detect-action@v1
        env:
          DETECT_PROJECT_USER_GROUPS: opencomponentmodel
          DETECT_PROJECT_VERSION_DISTRIBUTION: SAAS
          DETECT_SOURCE_PATH: ./
          NODE_TLS_REJECT_UNAUTHORIZED: true
          BLACKDUCK_SKIP_PHONE_HOME: true
          #LOGGING_LEVEL_COM_SYNOPSYS_INTEGRATION: DEBUG
        with:
          scan-mode: RAPID
          github-token: ${{ secrets.GITHUB_TOKEN }}
          blackduck-url: ${{ secrets.BLACKDUCK_URL }}
          blackduck-api-token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          detect-version: 8.8.0
          

# # use new synopsis action using bridge 
# jobs:
#   blackduck:
#     name: Black Duck SCA
#     runs-on: [ubuntu-latest]
#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v3

#       - name: Black Duck Full Scan
#         if: ${{ github.event_name != 'pull_request' }}
#         uses: synopsys-sig/synopsys-action@v1.4.1
#         ### Use below configuration to set specific detect environment variables
#         env:
#           #DETECT_PROJECT_NAME: ${{ github.event.repository.name }}
#           DETECT_PROJECT_USER_GROUPS: opencomponentmodel
#           DETECT_PROJECT_VERSION_DISTRIBUTION: SAAS
#           DETECT_SOURCE_PATH: ./
#           BLACKDUCK_TRUST_CERT: true
#           NODE_TLS_REJECT_UNAUTHORIZED: true
#         with:
#           blackduck_url: ${{ secrets.BLACKDUCK_URL }}
#           blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN }}
#           blackduck_scan_full: true
#           ### Accepts Multiple Values
#           blackduck_scan_failure_severities: 'BLOCKER,CRITICAL'
#           ### Uncomment below configuration to enable automatic fix pull request creation if vulnerabilities are reported
#           # blackduck_automation_fixpr: true 
#           # github_token: ${{ secrets.GITHUB_TOKEN }} # Mandatory when blackduck_automation_fixpr is set to 'true'
#           ### Uncomment below configuration if Synopsys Bridge diagnostic files needs to be uploaded
#           include_diagnostics: true  

#       - name: Black Duck PR Scan
#         if: ${{ github.event_name == 'pull_request' }}
#         uses: synopsys-sig/synopsys-action@v1.4.1
#         ### Use below configuration to set specific detect environment variables
#         env:
#           #DETECT_PROJECT_NAME: ${{ github.event.repository.name }}
#           DETECT_PROJECT_USER_GROUPS: opencomponentmodel
#           DETECT_PROJECT_VERSION_DISTRIBUTION: SAAS
#           DETECT_SOURCE_PATH: ./
#           BLACKDUCK_TRUST_CERT: true
#           NODE_TLS_REJECT_UNAUTHORIZED: true
#           BLACKDUCK_OFFLINE_MODE: true
#         with:
#           blackduck_url: ${{ secrets.BLACKDUCK_URL }}
#           blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN }}
#           blackduck_scan_full: false
#           ### Below configuration is used to enable automatic pull request comment based on Black Duck scan result
#           blackduck_automation_prcomment: true
#           github_token: ${{ secrets.GITHUB_TOKEN }} # Mandatory when blackduck_automation_prcomment is set to 'true'
#           ### Uncomment below configuration if Synopsys Bridge diagnostic files needs to be uploaded
#           include_diagnostics: true
