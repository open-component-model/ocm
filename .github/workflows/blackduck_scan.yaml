name: Blackduck SCA Scan
on:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]
  schedule:
    - cron:  '6 0 * * 0'
  workflow_dispatch:
  
permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
       
      - name: Run Black Duck Full SCA Scan (Push, Manual Trigger or Schedule)
        if: ${{ github.event_name != 'pull_request_target' }} 
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        env:
          DETECT_PROJECT_USER_GROUPS: opencomponentmodel
          DETECT_PROJECT_VERSION_DISTRIBUTION: opensource
          DETECT_SOURCE_PATH: ./
          DETECT_EXCLUDED_DIRECTORIES: .bridge
          DETECT_BLACKDUCK_SIGNATURE_SCANNER_ARGUMENTS: '--min-scan-interval=0'
          NODE_TLS_REJECT_UNAUTHORIZED: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          blackducksca_scan_full: true

      - name: Run Black Duck SCA Scan (Pull Requests)
        if: ${{ github.event_name == 'pull_request_target' }}
           # The action sets blackducksca_scan_full internally: for pushes to true and PRs to false
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        env:
          DETECT_PROJECT_USER_GROUPS: opencomponentmodel
          DETECT_PROJECT_VERSION_DISTRIBUTION: opensource
          DETECT_SOURCE_PATH: ./
          DETECT_SCAN_MODE: RAPID 
          DETECT_EXCLUDED_DIRECTORIES: .bridge
          NODE_TLS_REJECT_UNAUTHORIZED: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          blackducksca_scan_full: false
          blackducksca_prComment_enabled: true
      
      # Find and Upload Status.json as artifact to analyze potential issues during scan    
      - name: Find status.json
        id: find-status
        run: |
          FILE=$(find /home/runner/work/ocm/ocm/.bridge/Blackduck\ SCA\ Detect\ Execution/detect/runs -type f -name 'status.json' -print0 | xargs -0 -n1 basename)
          echo "status_file=${FILE}" >> $GITHUB_OUTPUT
        
      - name: Upload status.json
        uses: actions/upload-artifact@v3
        with:
          name: blackduck-status
          path: ${{ steps.find-status.outputs.status_file }}

          