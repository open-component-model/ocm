name: Blackduck SCA Scan
on:
  push:
    paths-ignore:
    - '.github/workflows/**'
    branches: [ "main" ]
  pull_request_target:
    paths-ignore:
    - '.github/workflows/**'
    branches: [ "main" ]
  schedule:
    - cron:  '6 0 * * 0'
  workflow_dispatch:
  
permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
       
      - name: Run Black Duck Full SCA Scan (Push, Manual Trigger or Schedule)
        if: ${{ github.event_name != 'pull_request_target' }} 
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        env:
          DETECT_PROJECT_USER_GROUPS: opencomponentmodel
          DETECT_PROJECT_VERSION_DISTRIBUTION: opensource
          DETECT_BLACKDUCK_SIGNATURE_SCANNER_ARGUMENTS: '--min-scan-interval=0'
          NODE_TLS_REJECT_UNAUTHORIZED: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          blackducksca_scan_full: true

      - name: Run Black Duck SCA Scan (Pull Requests)
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        env:
          DETECT_PROJECT_USER_GROUPS: opencomponentmodel
          DETECT_PROJECT_VERSION_DISTRIBUTION: opensource
          NODE_TLS_REJECT_UNAUTHORIZED: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          blackducksca_scan_full: false

      # Check Black Duck status and upload status file as artifact.
      # This step is required to be set as always(), so the status file is uploaded even if the Black Duck scan fails.
      - name: Check Black Duck status
        if: always()
        id: check_blackduck_status
        shell: bash
        run: |
          # Use find to locate status file
          STATUS_FILE=$(find "$GITHUB_WORKSPACE/.bridge/Blackduck SCA Detect Execution/detect/runs" -name "status.json" | head -n 1)
      
          if [ -z "$STATUS_FILE" ]; then
            echo "::warning file=status.json::No Black Duck status file found"
            exit 1
          fi

          echo "status_file_path=$STATUS_FILE" >> "$GITHUB_OUTPUT"
          ISSUE_COUNT=$(jq '.issues | length' "$STATUS_FILE")
          
          if [[ "$ISSUE_COUNT" -eq 0 ]]; then
            echo "Black Duck scan successful, no technical issues during scan."
          else
            # Technical issues with scan exist
            echo "::error file=$STATUS_FILE::Black Duck scan had technical issues:"
            
            # Extract and print issue details
            jq -r '.issues[] | "\(.type): \(.title)\n  Details: \((.messages | if type == "string" then [.] else . end) | join("; "))"' "$STATUS_FILE" | \
            while IFS= read -r line; do
              echo "::error::$line"
            done
            echo
            echo "Black Duck Overall Status:"
            jq -r '.overallStatus[0].key + " - " + .overallStatus[0].status' "$STATUS_FILE"
            exit 1
          fi
            
      - name: Upload Blackduck status file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: status-json
          path: ${{ steps.check_blackduck_status.outputs.status_file_path }}
     