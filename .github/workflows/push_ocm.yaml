name: publish as latest
on:
  # publish on pushes to the main branch (image tagged as "latest")
  # https://ocm.software/ocm/pkgs/container/ocm
  push:
    branches:
      - main

jobs:

  docker_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.OCMBOT_APP_ID }}
          private_key: ${{ secrets.OCMBOT_PRIV_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |            
            ghcr.io/${{ github.repository }}
      - name: Go Build Cache for Docker
        uses: actions/cache@v4
        with:
          path: go-build-cache
          key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}
      - name: inject go-build-cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          cache-source: go-build-cache
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          # supported platforms of https://hub.docker.com/_/golang/tags?page=1&name=1.23-alpine3.20
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          tags: |
            ghcr.io/open-component-model/ocm:latest
            ghcr.io/open-component-model/ocm/ocm.software/ocmcli/ocmcli-image:latest
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ocm-cli-latest:
    name: ocm-cli build latest
    runs-on: large_runner
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
    - name: Self Hosted Runner Post Job Cleanup Action
      uses: TooMuch4U/actions-clean@v2.2
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.OCMBOT_APP_ID }}
        private_key: ${{ secrets.OCMBOT_PRIV_KEY }}
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ steps.generate_token.outputs.token }}
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: '${{ github.workspace }}/go.mod'
        check-latest: false
    - name: Run GoReleaser --nightly
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: 2.2.0
        args: release --clean --nightly --timeout 60m --skip=validate --config=.github/config/latest.yml
      env:
        GITHUBORG: ${{ github.repository_owner }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
