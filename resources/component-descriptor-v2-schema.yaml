$id: 'https://gardener.cloud/schemas/component-descriptor-v2'
$schema: 'https://json-schema.org/draft/2020-12/schema'
description: 'Open Component Model v2 schema'
$defs:
  meta:
    type: 'object'
    description: 'component descriptor metadata'
    required:
      - 'schemaVersion'
    properties:
      schemaVersion:
        type: 'string'

  merge:
    type: 'object'
    properties:
      algorithm:
        pattern: '^[a-z][a-z0-9/_-]+$'
      config: { }
    additionalProperties: false
  label:
    type: 'object'
    required:
      - 'name'
      - 'value'
    properties:
      name:
        type: 'string'
      value: {}
      version:
        pattern: '^v[0-9]+$'
      signing:
        type: 'boolean'
      merge:
        $ref: '#/$defs/merge'

  componentName:
    type: 'string'
    maxLength: 255
    pattern: '^[a-z][-a-z0-9]*([.][a-z][-a-z0-9]*)*[.][a-z]{2,}(/[a-z][-a-z0-9_]*([.][a-z][-a-z0-9_]*)*)+$'

  identityAttributeKey:
    minLength: 2
    pattern: '^[a-z0-9]([-_+a-z0-9]*[a-z0-9])?$'

  relaxedSemver:
    # taken from semver.org and adjusted to allow an optional leading 'v', major-only, and major.minor-only
    # this means the following strings are all valid relaxedSemvers:
    # 1.2.3
    # 1.2.3-foo+bar
    # v1.2.3
    # v1.2.3-foo+bar
    # 1.2
    # 1
    # v1
    # v1.2
    # v1-foo+bar
    pattern: '^[v]?(0|[1-9]\d*)(?:\.(0|[1-9]\d*))?(?:\.(0|[1-9]\d*))?(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
    type: 'string'

  identityAttribute:
    type: 'object'
    propertyNames: { $ref: '#/$defs/identityAttributeKey' }

  repositoryContext:
    type: 'object'
    required:
      - 'type'
    properties:
      type:
        type: 'string'

  access:
    type: 'object'
    description: 'base type for accesses (for extensions)'
    required:
      - 'type'

  sourceDefinition:
    type: 'object'
    required:
      - name
      - version
      - type
      - access
    properties:
      name:
        type: 'string'
        $ref: '#/$defs/identityAttributeKey'
      extraIdentity:
        $ref: '#/$defs/identityAttribute'
      version:
        $ref: '#/$defs/relaxedSemver'
      type:
        type: 'string'
      labels:
        type: 'array'
        items:
          $ref: '#/$defs/label'
      access:
         $ref: '#/$defs/access'

  digestSpec:
    type: 'object'
    required:
      - hashAlgorithm
      - normalisationAlgorithm
      - value
    properties:
      hashAlgorithm:
        type: string
      normalisationAlgorithm:
        type: string
      value:
        type: string

  timestampSpec:
    type: object
    properties:
      value:
        type: string
      time:
        type: string
        format: date-time

  signatureSpec:
    type: 'object'
    required:
      - algorithm
      - value
      - mediaType
    properties:
      algorithm:
        type: string
      value:
        type: string
      mediaType:
        description: 'The media type of the signature value'
        type: string

  signature:
    type: 'object'
    required:
      - name
      - digest
      - signature
    additionalProperties: false
    properties:
      name:
        type: string
      digest:
        $ref: '#/$defs/digestSpec'
      signature:
        $ref: '#/$defs/signatureSpec'
      timestamp:
        $ref: '#/$defs/timestampSpec'

  nestedDigestSpec:
    type: 'object'
    required:
      - name
    properties:
      name:
        type: string
      version:
        type: string
      extraIdentity:
        $ref: '#/$defs/identityAttribute'
      digest:
        $ref: '#/$defs/digestSpec'

  nestedComponentDigests:
    type: 'object'
    required:
      - name
      - version
    properties:
      name:
        $ref: '#/$defs/componentName'
      version:
        $ref: '#/$defs/relaxedSemver'
      digest:
        $ref: '#/$defs/digestSpec'
      resourceDigests:
        type: 'array'
        items:
          $ref: '#/$defs/nestedDigestSpec'

  srcRef:
    type: 'object'
    description: 'a reference to a (component-local) source'
    additionalProperties: false
    properties:
      identitySelector:
        $ref: '#/$defs/identityAttribute'
      labels:
        type: 'array'
        items:
          $ref: '#/$defs/label'

  componentReference:
    type: 'object'
    description: 'a reference to a component'
    required:
      - 'name'
      - 'componentName'
      - 'version'
    additionalProperties: false
    properties:
      componentName:
        $ref: '#/$defs/componentName'
      name:
        type: 'string' # actually: component-type w/ special restrictions
        $ref: '#/$defs/identityAttributeKey'
      extraIdentity:
        $ref: '#/$defs/identityAttribute'
      version:
        $ref: '#/$defs/relaxedSemver'
      labels:
        type: 'array'
        items:
          $ref: '#/$defs/label'
      digest:
        oneOf:
          - type: 'null'
          - $ref: '#/$defs/digestSpec'

  resourceDefinition:
    type: 'object'
    description: 'base type for resources'
    required:
      - 'name'
      - 'version' # for local resources, this must match component's version
      - 'type'
      - 'relation'
      - 'access'
    properties:
      name:
        type: 'string'
        $ref: '#/$defs/identityAttributeKey'
      extraIdentity:
        $ref: '#/$defs/identityAttribute'
      version:
        $ref: '#/$defs/relaxedSemver'
      type:
        type: 'string'
      srcRefs:
        type: 'array'
        items:
          $ref: '#/$defs/srcRef'
      relation:
        type: 'string'
        enum: ['local', 'external']
      labels:
        type: 'array'
        items:
          $ref: '#/$defs/label'
      access:
          $ref: '#/$defs/access'
      digest:
        oneOf:
          - type: 'null'
          - $ref: '#/$defs/digestSpec'

  component:
    type: 'object'
    description: 'a component'
    required:
      - 'name'
      - 'version'
      - 'repositoryContexts'
      - 'provider'
      - 'sources'
      - 'componentReferences'
      - 'resources'
    properties:
      name:
        $ref: '#/$defs/componentName'
      version:
        $ref: '#/$defs/relaxedSemver'
      creationTime:
        type: ['string', 'null']
        format: date-time
      repositoryContexts:
        type: 'array'
        items:
          $ref: '#/$defs/repositoryContext'
      provider:
        type: 'string'
      labels:
        type: 'array'
        items:
          $ref: '#/$defs/label'
      sources:
        type: 'array'
        items:
          $ref: '#/$defs/sourceDefinition'
      componentReferences:
        type: 'array'
        items:
          $ref: '#/$defs/componentReference'
      resources:
        type: 'array'
        items:
          $ref: '#/$defs/resourceDefinition'

type: 'object'
required:
  - 'meta'
  - 'component'
properties:
  meta:
    $ref: '#/$defs/meta'
  component:
    $ref: '#/$defs/component'
  signatures:
    type: 'array'
    items:
      $ref: '#/$defs/signature'
  nestedDigests:
    type: 'array'
    items:
      $ref: '#/$defs/nestedComponentDigests'